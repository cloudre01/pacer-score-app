AWSTemplateFormatVersion: "2010-09-09"
Description: VPC Stack Template

Parameters:
  VpcBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: VPC CIDR Range

  PrivateSubnet01Block:
    Type: String
    Default: 10.0.1.0/24
    Description: CidrBlock for PrivateSubnet 01 within the VPC.

  PrivateSubnet02Block:
    Type: String
    Default: 10.0.2.0/24
    Description: CidrBlock for PrivateSubnet 02 within the VPC.

  PublicSubnet01Block:
    Type: String
    Default: 10.0.3.0/24
    Description: CidrBlock for PublicSubnet 01 within the VPC.

  PublicSubnet02Block:
    Type: String
    Default: 10.0.4.0/24
    Description: CidrBlock for PublicSubnet 02 within the VPC.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Dev VPC Network Configuration
        Parameters:
          - VpcBlock
          - PrivateSubnet01Block
          - PrivateSubnet02Block
          - PublicSubnet01Block
          - PublicSubnet02Block
    ParameterLabels:
      VpcBlock:
        default: VPC CIDR Range selection

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-myVPC"

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref PublicSubnet01Block
      AvailabilityZone:
        Fn::Select:
          - "0"
          - Fn::GetAZs:
              Ref: AWS::Region
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet-1"

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref PublicSubnet02Block
      AvailabilityZone:
        Fn::Select:
          - "1"
          - Fn::GetAZs:
              Ref: AWS::Region
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet-2"

  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref PrivateSubnet01Block
      AvailabilityZone:
        Fn::Select:
          - "0"
          - Fn::GetAZs:
              Ref: AWS::Region
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateSubnet-1"

  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref PrivateSubnet02Block
      AvailabilityZone:
        Fn::Select:
          - "1"
          - Fn::GetAZs:
              Ref: AWS::Region
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateSubnet-2"

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: Public Subnets
        - Key: Network
          Value: Public

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: Private Subnets
        - Key: Network
          Value: Private

  Public01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicRouteTable

  Public02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicRouteTable

  Private01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref PrivateRouteTable

  Private02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref PrivateRouteTable

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref myVPC

  Route:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet02

Outputs:
  PublicSubnet01Id:
    Description: Public Subnet Id
    Value: !Ref PublicSubnet01
  PublicSubnet02Id:
    Description: Public Subnet Id
    Value: !Ref PublicSubnet02
  PrivateSubnet01Id:
    Description: Private Subnet Id
    Value: !Ref PrivateSubnet01
  PrivateSubnet02Id:
    Description: Private Subnet Id
    Value: !Ref PrivateSubnet02
  VpcId:
    Description: VPC Id
    Value: !Ref myVPC
